#!/usr/bin/env python3




import os

import sys

from pathlib import Path




def find_rust_files(root_dir):

    """Find all .rs files in the directory tree."""

    rust_files = []

    for path in Path(root_dir).rglob("*.rs"):

        # Skip target directory

        if "target" in str(path):

            continue

        rust_files.append(path)

    return sorted(rust_files)




def flatten_rust_files(rust_files, output_file):

    """Combine all Rust files into a single file with clear separators."""

    with open(output_file, 'w', encoding='utf-8') as out:

        out.write("// Flattened Rust source files\n")

        out.write("// Generated by flatten_rust.py\n\n")




        for file_path in rust_files:

            relative_path = file_path.relative_to(Path.cwd())

            out.write(f"\n// ===== File: {relative_path} =====\n\n")




            with open(file_path, 'r', encoding='utf-8') as f:

                content = f.read()

                out.write(content)

                out.write("\n")




def main():

    if len(sys.argv) > 1:

        output_file = sys.argv[1]

    else:

        output_file = "flattened_rust.txt"




    workspace_root = Path.cwd()

    rust_files = find_rust_files(workspace_root)




    if not rust_files:

        print("No Rust files found in the workspace.")

        sys.exit(1)




    print(f"Found {len(rust_files)} Rust files")

    print(f"Writing flattened output to {output_file}")




    flatten_rust_files(rust_files, output_file)

    print("Done!")




if __name__ == "__main__":

    main() 